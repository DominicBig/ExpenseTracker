{"version":3,"sources":["store/expenseSlice.js","store/index.js","components/Header.js","components/Balance.js","components/IncomeExpenses.js","components/transactions/Transaction.js","components/transactions/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["expenseSlice","createSlice","name","initialState","transactions","id","text","amount","reducers","addTransaction","state","action","newTransaction","payload","push","deleteTransaction","filter","transaction","expenseActions","actions","store","configureStore","reducer","Header","Balance","total","useSelector","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","dispatch","useDispatch","sign","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","floor","random","htmlFor","type","value","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afd8e806.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialExpenseState = {\r\n  transactions: [\r\n    { id: 1, text: \"Flower\", amount: -20 },\r\n    { id: 2, text: \"Salary\", amount: 300 },\r\n    { id: 3, text: \"Book\", amount: -10 },\r\n    { id: 4, text: \"Camera\", amount: 150 },\r\n  ],\r\n};\r\n\r\nconst expenseSlice = createSlice({\r\n  name: \"expense\",\r\n  initialState: initialExpenseState,\r\n  reducers: {\r\n    addTransaction(state, action) {\r\n      const newTransaction = {\r\n        id: action.payload.id,\r\n        text: action.payload.text,\r\n        amount: +action.payload.amount,\r\n      };\r\n      state.transactions.push(newTransaction);\r\n    },\r\n    deleteTransaction(state, action) {\r\n      state.transactions = state.transactions.filter(\r\n        (transaction) => transaction.id !== action.payload\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const expenseActions = expenseSlice.actions;\r\nexport default expenseSlice;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport expenseSlice from \"./expenseSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    transaction: expenseSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;","import React from 'react'\r\n\r\n const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\nexport default Header;","import React /* useContext*/ from \"react\";\r\n//import { GlobalContext} from \"../context/index\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Balance = () => {\r\n  const transactions = useSelector((state) => state.transaction.transactions);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  //const { transactions } = useContext(GlobalContext);\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1> ${total}</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React /* useContext */ from \"react\";\r\n//import { GlobalContext } from \"../context/index\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst IncomeExpenses = () => {\r\n  const transactions = useSelector((state) => state.transaction.transactions);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  //const { transactions } = useContext(GlobalContext);\r\n  //const { transactions } = useContext(GlobalContext);\r\n  //const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">{income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expenese</h4>\r\n        <p className=\"money minus\">{expense}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpenses;\r\n","import React, {/* useContext */} from \"react\";\r\n//import { GlobalContext } from \"../../context/index\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { expenseActions } from \"../../store/expenseSlice\";\r\n\r\nconst Transaction = ({ transaction }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // const { deleteTransaction } = useContext(GlobalContext);\r\n  const sign = transaction.amount > 0 ? \"+\" : \"-\";\r\n\r\n  const deleteTransactionHandler = () => {\r\n    dispatch(expenseActions.deleteTransaction(transaction.id));\r\n    //deleteTransaction(transaction.id);\r\n  };\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? \"plus\" : \"minus\"}>\r\n      {transaction.text}{\" \"}\r\n      <span>\r\n        {sign} ${Math.abs(transaction.amount)}{\" \"}\r\n      </span>\r\n      <button onClick={deleteTransactionHandler} className=\"delete-btn\">\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React, {/* useContext */} from \"react\";\r\n//import { GlobalContext } from \"../../context/index\";\r\nimport Transaction from \"./Transaction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TransactionList = () => {\r\n  //const { transactions } = useContext(GlobalContext);\r\n  const transactions = useSelector((state) => state.transaction.transactions);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React, { useState /*useContext */ } from \"react\";\r\n//import { GlobalContext } from \"../context/index\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { expenseActions } from \"../store/expenseSlice\";\r\n\r\nconst AddTransaction = () => {\r\n  // const { addTransaction } = useContext(GlobalContext);\r\n  const dispatch = useDispatch();\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const textChangeHandler = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 1000000000),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n    // addTransaction(newTransaction);\r\n    dispatch(expenseActions.addTransaction(newTransaction));\r\n    setText(\"\");\r\n    setAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={textChangeHandler}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            onChange={amountChangeHandler}\r\n            value={amount}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import \"./index.css\";\nimport Header from \"./components/Header\";\nimport Balance from \"./components/Balance\";\nimport IncomeExpenses from \"./components/IncomeExpenses\";\nimport TransactionList from \"./components/transactions/TransactionList\";\nimport AddTransaction from \"./components/AddTransaction\";\n//import { GlobalProvider } from \"./context/index\";\n\n\n\nfunction App() {\n  return (\n    //<GlobalProvider>\n    <>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n      </>\n   // </GlobalProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}